{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "94031563",
      "metadata": {
        "id": "94031563"
      },
      "outputs": [],
      "source": [
        "#import required library\n",
        "from tkinter.ttk import Style, Button, Combobox,Entry\n",
        "from tkinter import Frame, Tk,messagebox,Label\n",
        "import pandas as pd\n",
        "import pickle as pkl\n",
        "#Get clean data\n",
        "data = pd.read_csv(r\"C:\\Users\\ketan\\AppData\\Roaming\\Python\\Python310\\Scripts\\cleaned_data\")\n",
        "data.drop(columns='Unnamed: 0',inplace=True)\n",
        "#getting pipeline\n",
        "pkl = pickle.load(open('car.pkl','rb'))\n",
        "#creating var for store prediction list and prediction\n",
        "data1 = []\n",
        "pred = 0\n",
        "#creating functions for last page\n",
        "def predict1():\n",
        "    root = Tk()\n",
        "    root.geometry('200x200')\n",
        "    root.maxsize(width=200, height=150)\n",
        "    root.minsize(width=200, height=150)\n",
        "    root.title('Car Price Prediction')\n",
        "    root.config(bg='LightSteelBlue1')\n",
        "    style2 = Style()\n",
        "    style2.configure('TButton', bg='LightSkyBlue3', font=('Franklin Gothic Demi', 10, 'bold'))\n",
        "    button = Button(text='EXIT',width=5,command=root.destroy)\n",
        "    label = Label(text=pred)\n",
        "    def back():\n",
        "        root.destroy()\n",
        "        global data1\n",
        "        data1.clear()\n",
        "        get_name()\n",
        "    label.place(relx=0.3,rely=0.35)   \n",
        "    button3 = Button(text='Back',command=back)\n",
        "    button.pack(anchor='ne',side='top')\n",
        "    button3.place(relx=0.3,rely=0.55)\n",
        "    root.mainloop()\n",
        "#creating window for getting fuel_type,km_driven,get_year,get_name    \n",
        "def get_fuel_type():\n",
        "    root = Tk()\n",
        "    root.geometry('200x200')\n",
        "    root.maxsize(width=200, height=150)\n",
        "    root.minsize(width=200, height=150)\n",
        "    root.title('Car Price Prediction')\n",
        "    root.config(bg='LightSteelBlue1')\n",
        "    style2 = Style()\n",
        "    style2.configure('TButton', bg='LightSkyBlue3', font=('Franklin Gothic Demi', 10, 'bold'))\n",
        "    button = Button(text='EXIT',width=5,command=root.destroy)\n",
        "    combo = Combobox(state='readonly', values=list(data[data.name == data1[0]]['fuel_type'].unique()))\n",
        "    combo.set('select fuel_type')\n",
        "    def predict():\n",
        "        data1.append(combo.get())\n",
        "        global pred\n",
        "        pred = abs(round(pkl.predict(pd.DataFrame([data1],columns=['name','company','year','kms_covered','fuel_type']))[0],2))\n",
        "        root.destroy()\n",
        "        predict1()\n",
        "      \n",
        "    def back():\n",
        "        root.destroy()\n",
        "        global data1\n",
        "        data1.pop()\n",
        "        km_driven()  \n",
        "        \n",
        "    button1 = Button(text='\\U0001F449',width=5)\n",
        "    button2 = Button(text='\\U0001F448',width=5,command=back)\n",
        "    button3 = Button(text='Predict',command=predict)\n",
        "    combo.place(relx = 0.17,rely=0.3)\n",
        "    button.pack(anchor='ne',side='top')\n",
        "    button1.place(relx=0.6,rely=0.5)\n",
        "    button2.place(relx=0.17,rely=0.5)\n",
        "    button3.place(relx=0.3,rely=0.70)\n",
        "    root.mainloop()\n",
        "def km_driven():\n",
        "    root = Tk()\n",
        "    root.geometry('200x200')\n",
        "    root.maxsize(width=200, height=150)\n",
        "    root.minsize(width=200, height=150)\n",
        "    root.title('Car Price Prediction')\n",
        "    root.config(bg='LightSteelBlue1')\n",
        "    style2 = Style()\n",
        "    style2.configure('TButton', bg='LightSkyBlue3', font=('Franklin Gothic Demi', 10, 'bold'))\n",
        "    button = Button(text='EXIT',width=5,command=root.destroy)\n",
        "    def touch(event):\n",
        "        entry.delete(0,20)\n",
        "    entry = Entry()\n",
        "    entry.insert(0,'enter km_driven')\n",
        "    entry.bind('<Button-1>',touch)\n",
        "    def next():\n",
        "        global data1\n",
        "        if entry.get() == 'enter km_driven' or not entry.get().isnumeric():\n",
        "            messagebox.showinfo('please select name')\n",
        "        elif int(entry.get()) < 0 or int(entry.get()) > 100000:\n",
        "            messagebox.showinfo('1 to 99999')     \n",
        "        else:\n",
        "            data1.append(int(entry.get()))\n",
        "            root.destroy()\n",
        "            get_fuel_type()\n",
        "    def back():\n",
        "        root.destroy()\n",
        "        global data1\n",
        "        data1.pop()\n",
        "        get_year() \n",
        "        \n",
        "    button1 = Button(text='\\U0001F449',width=5,command=next)\n",
        "    button2 = Button(text='\\U0001F448',width=5,command=back)\n",
        "    entry.place(relx = 0.17,rely=0.3)\n",
        "    button.pack(anchor='ne',side='top')\n",
        "    button1.place(relx=0.6,rely=0.5)\n",
        "    button2.place(relx=0.17,rely=0.5)\n",
        "def get_year():\n",
        "    root = Tk()\n",
        "    root.geometry('200x200')\n",
        "    root.maxsize(width=200, height=150)\n",
        "    root.minsize(width=200, height=150)\n",
        "    root.title('Car Price Prediction')\n",
        "    root.config(bg='LightSteelBlue1')\n",
        "    style2 = Style()\n",
        "    style2.configure('TButton', bg='LightSkyBlue3', font=('Franklin Gothic Demi', 10, 'bold'))\n",
        "    button = Button(text='EXIT',width=5,command=root.destroy)\n",
        "    combo = Combobox(state='readonly', values=list(range(1990,2021)))\n",
        "    combo.set('select year')\n",
        "    def next():\n",
        "        global data1\n",
        "        if combo.get() == 'select car name':\n",
        "            messagebox.showinfo('please select name')\n",
        "        else:\n",
        "            data1.append(int(combo.get()))\n",
        "            root.destroy()\n",
        "            km_driven()\n",
        "    def back():\n",
        "        root.destroy()\n",
        "        global data1\n",
        "        data1.clear()\n",
        "        get_name()   \n",
        "        \n",
        "    button1 = Button(text='\\U0001F449',width=5,command=next)\n",
        "    button2 = Button(text='\\U0001F448',width=5,command=back)\n",
        "    combo.place(relx = 0.17,rely=0.3)\n",
        "    button.pack(anchor='ne',side='top')\n",
        "    button1.place(relx=0.6,rely=0.5)\n",
        "    button2.place(relx=0.17,rely=0.5)\n",
        "    root.mainloop()    \n",
        "        \n",
        "def get_name():\n",
        "    root = Tk()\n",
        "    root.geometry('200x200')\n",
        "    root.maxsize(width=200, height=150)\n",
        "    root.minsize(width=200, height=150)\n",
        "    root.title('Car Price Prediction')\n",
        "    root.config(bg='LightSteelBlue1')\n",
        "    style2 = Style()\n",
        "    style2.configure('TButton', bg='LightSkyBlue3', font=('Franklin Gothic Demi', 10, 'bold'))\n",
        "    button = Button(text='EXIT',width=5,command=root.destroy)\n",
        "    combo = Combobox(state='readonly', values=list(data.name.unique()))\n",
        "    combo.set('select car name')\n",
        "    def next():\n",
        "        if combo.get() == 'select car name':\n",
        "            messagebox.showinfo('please select name')\n",
        "        else:\n",
        "            global data1\n",
        "            data1.append(combo.get())\n",
        "            data1.append(data[data.name == combo.get()]['company'].unique()[0])\n",
        "            root.destroy()\n",
        "            get_year()\n",
        "        \n",
        "    button1 = Button(text='\\U0001F449',width=5,command=next)\n",
        "    button2 = Button(text='\\U0001F448',width=5)\n",
        "    combo.place(relx = 0.17,rely=0.3)\n",
        "    button.pack(anchor='ne',side='top')\n",
        "    button1.place(relx=0.6,rely=0.5)\n",
        "    button2.place(relx=0.17,rely=0.5)\n",
        "    root.mainloop()\n",
        "#calling get_name function  \n",
        "get_name()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "06dbbbfd",
      "metadata": {
        "id": "06dbbbfd",
        "outputId": "923b9458-79b8-4e32-a208-12286f2b6d4c"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>company</th>\n",
              "      <th>year</th>\n",
              "      <th>price</th>\n",
              "      <th>kms_covered</th>\n",
              "      <th>fuel_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mahindra Jeep CL550</td>\n",
              "      <td>Mahindra</td>\n",
              "      <td>2006</td>\n",
              "      <td>425000</td>\n",
              "      <td>40</td>\n",
              "      <td>Diesel</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Hyundai Grand i10</td>\n",
              "      <td>Hyundai</td>\n",
              "      <td>2014</td>\n",
              "      <td>325000</td>\n",
              "      <td>28000</td>\n",
              "      <td>Petrol</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ford EcoSport Titanium</td>\n",
              "      <td>Ford</td>\n",
              "      <td>2014</td>\n",
              "      <td>575000</td>\n",
              "      <td>36000</td>\n",
              "      <td>Diesel</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Ford Figo</td>\n",
              "      <td>Ford</td>\n",
              "      <td>2012</td>\n",
              "      <td>175000</td>\n",
              "      <td>41000</td>\n",
              "      <td>Diesel</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hyundai Eon</td>\n",
              "      <td>Hyundai</td>\n",
              "      <td>2013</td>\n",
              "      <td>190000</td>\n",
              "      <td>25000</td>\n",
              "      <td>Petrol</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>809</th>\n",
              "      <td>Maruti Suzuki Ritz</td>\n",
              "      <td>Maruti</td>\n",
              "      <td>2011</td>\n",
              "      <td>270000</td>\n",
              "      <td>50000</td>\n",
              "      <td>Petrol</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>810</th>\n",
              "      <td>Tata Indica V2</td>\n",
              "      <td>Tata</td>\n",
              "      <td>2009</td>\n",
              "      <td>110000</td>\n",
              "      <td>30000</td>\n",
              "      <td>Diesel</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>811</th>\n",
              "      <td>Toyota Corolla Altis</td>\n",
              "      <td>Toyota</td>\n",
              "      <td>2009</td>\n",
              "      <td>300000</td>\n",
              "      <td>132000</td>\n",
              "      <td>Petrol</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>812</th>\n",
              "      <td>Tata Zest XM</td>\n",
              "      <td>Tata</td>\n",
              "      <td>2018</td>\n",
              "      <td>260000</td>\n",
              "      <td>27000</td>\n",
              "      <td>Diesel</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>813</th>\n",
              "      <td>Mahindra Quanto C8</td>\n",
              "      <td>Mahindra</td>\n",
              "      <td>2013</td>\n",
              "      <td>390000</td>\n",
              "      <td>40000</td>\n",
              "      <td>Diesel</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>814 rows × 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                       name   company  year   price  kms_covered fuel_type\n",
              "0       Mahindra Jeep CL550  Mahindra  2006  425000           40    Diesel\n",
              "1         Hyundai Grand i10   Hyundai  2014  325000        28000    Petrol\n",
              "2    Ford EcoSport Titanium      Ford  2014  575000        36000    Diesel\n",
              "3                 Ford Figo      Ford  2012  175000        41000    Diesel\n",
              "4               Hyundai Eon   Hyundai  2013  190000        25000    Petrol\n",
              "..                      ...       ...   ...     ...          ...       ...\n",
              "809      Maruti Suzuki Ritz    Maruti  2011  270000        50000    Petrol\n",
              "810          Tata Indica V2      Tata  2009  110000        30000    Diesel\n",
              "811    Toyota Corolla Altis    Toyota  2009  300000       132000    Petrol\n",
              "812            Tata Zest XM      Tata  2018  260000        27000    Diesel\n",
              "813      Mahindra Quanto C8  Mahindra  2013  390000        40000    Diesel\n",
              "\n",
              "[814 rows x 6 columns]"
            ]
          },
          "execution_count": 17,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.7"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}